// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PekoBot.Database;

namespace PekoBot.Database.Migrations
{
    [DbContext(typeof(PekoBotContext))]
    [Migration("20210110150251_NotificationCheck")]
    partial class NotificationCheck
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PekoBot.Entities.Models.DiscordChannel", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChannelType")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("PekoBot.Entities.Models.Live", b =>
                {
                    b.Property<int>("LiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cover")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Notified")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Platform")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Reminded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Room")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("LiveId");

                    b.HasIndex("MemberId");

                    b.ToTable("Lives");
                });

            modelBuilder.Entity("PekoBot.Entities.Models.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeAvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("PekoBot.Entities.Models.Live", b =>
                {
                    b.HasOne("PekoBot.Entities.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
